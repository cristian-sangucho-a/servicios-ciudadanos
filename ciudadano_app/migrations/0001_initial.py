# Generated by Django 5.1 on 2025-01-26 02:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ciudadano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('correo_electronico', models.EmailField(help_text='Dirección de correo electrónico del ciudadano', max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('nombre_completo', models.CharField(help_text='Nombre completo del ciudadano', max_length=120, verbose_name='Nombre Completo')),
                ('numero_identificacion', models.CharField(help_text='Número de documento de identidad del ciudadano', max_length=20, unique=True, verbose_name='Número de Identificación')),
                ('esta_activo', models.BooleanField(default=True, help_text='Indica si el ciudadano puede acceder al sistema', verbose_name='¿Está Activo?')),
                ('es_staff', models.BooleanField(default=False, help_text='Indica si el ciudadano puede acceder al panel de administración', verbose_name='¿Es Personal Administrativo?')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que el ciudadano se registró en el sistema', verbose_name='Fecha de Registro')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Ciudadano',
                'verbose_name_plural': 'Ciudadanos',
                'ordering': ['-fecha_registro'],
            },
        ),
    ]
